{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# CA1: Dataframe Manipulation with Spotify Data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Introduction\n",
    "Pandas is an extremely powerful tool to handle large amounts of tabular data. In this compulsory assignment, you will use Pandas to explore one of the TA's personal spotify data in depth. \\\n",
    "\\\n",
    "Additional information:\n",
    "- Feel free to create additional code cells if you feel that one cell per subtask is not sufficient.\n",
    "- Remember, Pandas uses very efficient code to handle large amounts of data. For-loops are not efficient. If you ever have to use a for-loop to loop over the rows in the DataFrame, you have *probably* done something wrong.\n",
    "- Label all graphs and charts if applicable."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Task\n",
    "I typically enjoy indie and rock music. I am a big fan of everything from old-fashioned rock and roll like Led Zeppelin and Jimi Hendrix, to newer indie artists like Joji and Lana Del Rey. This is why my spotify wrapped for 2023 came as quite a surprise:"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<img src=\"spotifywrapped.PNG\" alt=\"Image Description\" width=\"20%\">\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, I'm no hater of pop music, but this was unexpected. \n",
    "For this assignment, you will investigate my listening habits, including a deep dive into my Ariana Grande listening habits, and try to find an answer to why she was my top artist; was there a fault in the spotify algorithm? Am I actually secretly an *Arianator*? (yes, I did have to look that up). Or am I just lying to myself about how often I listen to guilty pleasure music?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1: Initial loading and exploration"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.0 Import necessary libraries: \n",
    "pandas, numpy, matplotlib.pyplot (other libraries such as seaborn or plotly are also allowed if you want prettier plots). It might also be a good idea to use **os** for task 2.0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 526,
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.1 Loading the data\n",
    "Load the dataset in the file `streaming_history_0.csv` into a Pandas DataFrame called `df_spotify_0`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 527,
   "metadata": {},
   "outputs": [],
   "source": [
    "history = pd.read_csv(\"streaminghistory0.csv\", header=0)\n",
    "df_spotify_0 = pd.DataFrame(history)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.2 Help function\n",
    "Use the Python command `help` to help you understand how to use the `pd.DataFrame.head` and `pd.DataFrame.tail` methods."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.3 Getting an overview\n",
    "Print the first `five` and last `ten` rows of the dataframe. Have a quick look at which columns are in the dataset. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 528,
   "metadata": {},
   "outputs": [],
   "source": [
    "num_entries = df_spotify_0.shape[0]\n",
    "new_indexes = [f'Track {x + 1}' for x in range(num_entries)]\n",
    "df_spotify_0.index = new_indexes\n",
    "new_headers = {'endTime': 'End Time', 'artistName': 'Artist', 'trackName': 'Track', 'msPlayed': 'Playtime (Ms)'}\n",
    "df_spotify_0 = df_spotify_0.rename(columns=new_headers)\n",
    "\n",
    "df0_sorted = df_spotify_0.sort_values(by=['Playtime (Ms)'], ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 529,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>End Time</th>\n",
       "      <th>Artist</th>\n",
       "      <th>Track</th>\n",
       "      <th>Playtime (Ms)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Track 5718</th>\n",
       "      <td>2022-12-20 19:30</td>\n",
       "      <td>The Smiths</td>\n",
       "      <td>How Soon Is Now? - 2011 Remaster</td>\n",
       "      <td>408173.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11702</th>\n",
       "      <td>2023-01-02 17:05</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Solar Power</td>\n",
       "      <td>392859.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 6402</th>\n",
       "      <td>2022-12-21 17:59</td>\n",
       "      <td>10cc</td>\n",
       "      <td>I'm Not In Love</td>\n",
       "      <td>366640.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 9990</th>\n",
       "      <td>2022-12-30 11:44</td>\n",
       "      <td>Tame Impala</td>\n",
       "      <td>New Person, Same Old Mistakes</td>\n",
       "      <td>363240.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 10262</th>\n",
       "      <td>2022-12-30 15:51</td>\n",
       "      <td>Peach Pit</td>\n",
       "      <td>Tommy's Party</td>\n",
       "      <td>361760.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     End Time       Artist                             Track  \\\n",
       "Track 5718   2022-12-20 19:30   The Smiths  How Soon Is Now? - 2011 Remaster   \n",
       "Track 11702  2023-01-02 17:05        Lorde                       Solar Power   \n",
       "Track 6402   2022-12-21 17:59         10cc                   I'm Not In Love   \n",
       "Track 9990   2022-12-30 11:44  Tame Impala     New Person, Same Old Mistakes   \n",
       "Track 10262  2022-12-30 15:51    Peach Pit                     Tommy's Party   \n",
       "\n",
       "             Playtime (Ms)  \n",
       "Track 5718        408173.0  \n",
       "Track 11702       392859.0  \n",
       "Track 6402        366640.0  \n",
       "Track 9990        363240.0  \n",
       "Track 10262       361760.0  "
      ]
     },
     "execution_count": 529,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df0_sorted.head(5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 530,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>End Time</th>\n",
       "      <th>Artist</th>\n",
       "      <th>Track</th>\n",
       "      <th>Playtime (Ms)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Track 11241</th>\n",
       "      <td>2023-01-01 21:53</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Knew Better / Forever Boy</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11228</th>\n",
       "      <td>2023-01-01 21:47</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>break up with your girlfriend, i'm bored</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 10221</th>\n",
       "      <td>2022-12-30 13:59</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Writer In The Dark</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 820</th>\n",
       "      <td>2022-12-08 18:52</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Supercut</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11215</th>\n",
       "      <td>2023-01-01 21:44</td>\n",
       "      <td>Fana Hues</td>\n",
       "      <td>Icarus</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11212</th>\n",
       "      <td>2023-01-01 21:44</td>\n",
       "      <td>Dominic Fike</td>\n",
       "      <td>Wurli</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11205</th>\n",
       "      <td>2023-01-01 21:44</td>\n",
       "      <td>Tame Impala</td>\n",
       "      <td>The Boat I Row</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 2192</th>\n",
       "      <td>2022-12-12 11:08</td>\n",
       "      <td>Sir Chloe</td>\n",
       "      <td>Too Close</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 11184</th>\n",
       "      <td>2023-01-01 21:41</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>successful</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 8583</th>\n",
       "      <td>2022-12-27 13:08</td>\n",
       "      <td>Bring Me The Horizon</td>\n",
       "      <td>What You Need</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                     End Time                Artist  \\\n",
       "Track 11241  2023-01-01 21:53         Ariana Grande   \n",
       "Track 11228  2023-01-01 21:47         Ariana Grande   \n",
       "Track 10221  2022-12-30 13:59                 Lorde   \n",
       "Track 820    2022-12-08 18:52                 Lorde   \n",
       "Track 11215  2023-01-01 21:44             Fana Hues   \n",
       "Track 11212  2023-01-01 21:44          Dominic Fike   \n",
       "Track 11205  2023-01-01 21:44           Tame Impala   \n",
       "Track 2192   2022-12-12 11:08             Sir Chloe   \n",
       "Track 11184  2023-01-01 21:41         Ariana Grande   \n",
       "Track 8583   2022-12-27 13:08  Bring Me The Horizon   \n",
       "\n",
       "                                                Track  Playtime (Ms)  \n",
       "Track 11241                 Knew Better / Forever Boy            0.0  \n",
       "Track 11228  break up with your girlfriend, i'm bored            0.0  \n",
       "Track 10221                        Writer In The Dark            0.0  \n",
       "Track 820                                    Supercut            0.0  \n",
       "Track 11215                                    Icarus            0.0  \n",
       "Track 11212                                     Wurli            0.0  \n",
       "Track 11205                            The Boat I Row            0.0  \n",
       "Track 2192                                  Too Close            0.0  \n",
       "Track 11184                                successful            0.0  \n",
       "Track 8583                              What You Need            0.0  "
      ]
     },
     "execution_count": 530,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df0_sorted.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 531,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "11959"
      ]
     },
     "execution_count": 531,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_spotify_0.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.4 Formatting correctly\n",
    "When working with Pandas, it's very useful to have columns which contains dates in a specific format called *datetime*. This allows for efficient manipulation and analysis of time-series data, such as sorting, filtering by date or time, and resampling for different time periods. Figure out which column(s) would be appropriate to convert to datetime, if any, and if so, perform the conversion to the correct format."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 532,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "End Time          object\n",
       "Artist            object\n",
       "Track             object\n",
       "Playtime (Ms)    float64\n",
       "dtype: object"
      ]
     },
     "execution_count": 532,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_spotify_0.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 533,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>End Time</th>\n",
       "      <th>Artist</th>\n",
       "      <th>Track</th>\n",
       "      <th>Playtime (Ms)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Track 1</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Cigarettes After Sex</td>\n",
       "      <td>Truly</td>\n",
       "      <td>30000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 2</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Take This Waltz - Paris Version</td>\n",
       "      <td>8210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 3</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Vlad Holiday</td>\n",
       "      <td>So Damn Into You</td>\n",
       "      <td>37895.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 4</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Team</td>\n",
       "      <td>8984.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 5</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Into You</td>\n",
       "      <td>1221.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 6</th>\n",
       "      <td>2022-12-07 00:21</td>\n",
       "      <td>Caroline Polachek</td>\n",
       "      <td>Hit Me Where It Hurts</td>\n",
       "      <td>1648.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 7</th>\n",
       "      <td>2022-12-07 00:21</td>\n",
       "      <td>Kaizers Orchestra</td>\n",
       "      <td>Prosessen</td>\n",
       "      <td>348.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 8</th>\n",
       "      <td>2022-12-07 00:21</td>\n",
       "      <td>Vlad Holiday</td>\n",
       "      <td>So Damn Into You</td>\n",
       "      <td>1555.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 9</th>\n",
       "      <td>2022-12-07 00:21</td>\n",
       "      <td>Vlad Holiday</td>\n",
       "      <td>So Damn Into You</td>\n",
       "      <td>1486.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Track 10</th>\n",
       "      <td>2022-12-07 00:21</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Best Mistake</td>\n",
       "      <td>8824.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                  End Time                Artist  \\\n",
       "Track 1   2022-12-03 02:02  Cigarettes After Sex   \n",
       "Track 2   2022-12-03 02:02         Leonard Cohen   \n",
       "Track 3   2022-12-06 21:05          Vlad Holiday   \n",
       "Track 4   2022-12-06 21:05                 Lorde   \n",
       "Track 5   2022-12-06 21:05         Ariana Grande   \n",
       "Track 6   2022-12-07 00:21     Caroline Polachek   \n",
       "Track 7   2022-12-07 00:21     Kaizers Orchestra   \n",
       "Track 8   2022-12-07 00:21          Vlad Holiday   \n",
       "Track 9   2022-12-07 00:21          Vlad Holiday   \n",
       "Track 10  2022-12-07 00:21         Ariana Grande   \n",
       "\n",
       "                                    Track  Playtime (Ms)  \n",
       "Track 1                             Truly        30000.0  \n",
       "Track 2   Take This Waltz - Paris Version         8210.0  \n",
       "Track 3                  So Damn Into You        37895.0  \n",
       "Track 4                              Team         8984.0  \n",
       "Track 5                          Into You         1221.0  \n",
       "Track 6             Hit Me Where It Hurts         1648.0  \n",
       "Track 7                         Prosessen          348.0  \n",
       "Track 8                  So Damn Into You         1555.0  \n",
       "Track 9                  So Damn Into You         1486.0  \n",
       "Track 10                     Best Mistake         8824.0  "
      ]
     },
     "execution_count": 533,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_spotify_0['End Time'] = pd.to_datetime(df_spotify_0['End Time']).dt.strftime('%Y-%m-%d %H:%M')\n",
    "df_spotify_0.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 534,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2022-12-03 02:02'"
      ]
     },
     "execution_count": 534,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_spotify_0['End Time'].min()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 535,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'2023-01-02 20:59'"
      ]
     },
     "execution_count": 535,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_spotify_0['End Time'].max()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.5 Unique artists\n",
    "Find how many unique artists are in the dataset.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 536,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "495"
      ]
     },
     "execution_count": 536,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_spotify_0['Artist'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 1.6 Unique songs\n",
    "Find how many unique songs are in the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 537,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1308"
      ]
     },
     "execution_count": 537,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_spotify_0['Track'].unique())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Part 1: Questions\n",
    "Q1: Which columns are in the dataset?\n",
    "\n",
    "A1: End Time, Artist, Track and Playtime\n",
    "\n",
    "Q2: What timeframe does the dataset span?\n",
    "\n",
    "A2: From 3rd December 2022 until 2nd January 2023\n",
    "\n",
    "Q3: How many unique artists are in the dataset?\n",
    "\n",
    "A3: 495\n",
    "\n",
    "Q4: How many unique songs are in the dataset?\n",
    "\n",
    "A4: 1308"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 2: Working with all the data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.0 Importing all the dataframes\n",
    "In Task 1, you only worked with about a month worth of data. Now, you will work with over a year worth. \n",
    "\n",
    "In the *spotify_data* folder, there is more than just one listening record. Load each of the 14 listening records into a dataframe (1 dataframe per listening record), and concatenate them together into one large dataframe named `df`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 538,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>msPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Cigarettes After Sex</td>\n",
       "      <td>Truly</td>\n",
       "      <td>30000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Take This Waltz - Paris Version</td>\n",
       "      <td>8210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Vlad Holiday</td>\n",
       "      <td>So Damn Into You</td>\n",
       "      <td>37895.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Team</td>\n",
       "      <td>8984.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Into You</td>\n",
       "      <td>1221.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11967</th>\n",
       "      <td>2023-12-07 21:13</td>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>Art Deco</td>\n",
       "      <td>38298.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13448.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23757.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9317.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14661.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>167439 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                endTime            artistName  \\\n",
       "0      2022-12-03 02:02  Cigarettes After Sex   \n",
       "1      2022-12-03 02:02         Leonard Cohen   \n",
       "2      2022-12-06 21:05          Vlad Holiday   \n",
       "3      2022-12-06 21:05                 Lorde   \n",
       "4      2022-12-06 21:05         Ariana Grande   \n",
       "...                 ...                   ...   \n",
       "11967  2023-12-07 21:13          Lana Del Rey   \n",
       "11968  2023-12-07 21:13         Ariana Grande   \n",
       "11969  2023-12-07 21:14         Ariana Grande   \n",
       "11970  2023-12-07 21:14         Leonard Cohen   \n",
       "11971  2023-12-07 21:17          The Vaccines   \n",
       "\n",
       "                             trackName  msPlayed  \n",
       "0                                Truly   30000.0  \n",
       "1      Take This Waltz - Paris Version    8210.0  \n",
       "2                     So Damn Into You   37895.0  \n",
       "3                                 Team    8984.0  \n",
       "4                             Into You    1221.0  \n",
       "...                                ...       ...  \n",
       "11967                         Art Deco   38298.0  \n",
       "11968  off the table (with The Weeknd)   13448.0  \n",
       "11969                          my hair   23757.0  \n",
       "11970             Thanks for the Dance    9317.0  \n",
       "11971   Your Love Is My Favourite Band   14661.0  \n",
       "\n",
       "[167439 rows x 4 columns]"
      ]
     },
     "execution_count": 538,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_list = []\n",
    "\n",
    "for i in range(14):\n",
    "    dataframe = pd.DataFrame(pd.read_csv(f\"spotify_data/streaminghistory{i}.csv\"))\n",
    "    df_list.append(dataframe)\n",
    "\n",
    "df = pd.concat(df_list, axis=0)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 539,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "167439"
      ]
     },
     "execution_count": 539,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.1 Sorting by time\n",
    "Datasets often aren't perfect. One example of an issue that could occur is that the time-based data might not be in chronological order. If this were to happen, the rows in your dataframe could be in the wrong order. To ensure this isn't an issue in your dataframe, you should sort the dataframe in chronological order, from oldest to newest."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 540,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>msPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Cigarettes After Sex</td>\n",
       "      <td>Truly</td>\n",
       "      <td>30000.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-12-03 02:02</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Take This Waltz - Paris Version</td>\n",
       "      <td>8210.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Vlad Holiday</td>\n",
       "      <td>So Damn Into You</td>\n",
       "      <td>37895.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Lorde</td>\n",
       "      <td>Team</td>\n",
       "      <td>8984.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2022-12-06 21:05</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Into You</td>\n",
       "      <td>1221.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13448.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9317.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23757.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14661.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9062</th>\n",
       "      <td>NaN</td>\n",
       "      <td>The Lumineers</td>\n",
       "      <td>Ophelia</td>\n",
       "      <td>371.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>167439 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                endTime            artistName  \\\n",
       "0      2022-12-03 02:02  Cigarettes After Sex   \n",
       "1      2022-12-03 02:02         Leonard Cohen   \n",
       "2      2022-12-06 21:05          Vlad Holiday   \n",
       "3      2022-12-06 21:05                 Lorde   \n",
       "4      2022-12-06 21:05         Ariana Grande   \n",
       "...                 ...                   ...   \n",
       "11968  2023-12-07 21:13         Ariana Grande   \n",
       "11970  2023-12-07 21:14         Leonard Cohen   \n",
       "11969  2023-12-07 21:14         Ariana Grande   \n",
       "11971  2023-12-07 21:17          The Vaccines   \n",
       "9062                NaN         The Lumineers   \n",
       "\n",
       "                             trackName  msPlayed  \n",
       "0                                Truly   30000.0  \n",
       "1      Take This Waltz - Paris Version    8210.0  \n",
       "2                     So Damn Into You   37895.0  \n",
       "3                                 Team    8984.0  \n",
       "4                             Into You    1221.0  \n",
       "...                                ...       ...  \n",
       "11968  off the table (with The Weeknd)   13448.0  \n",
       "11970             Thanks for the Dance    9317.0  \n",
       "11969                          my hair   23757.0  \n",
       "11971   Your Love Is My Favourite Band   14661.0  \n",
       "9062                           Ophelia     371.0  \n",
       "\n",
       "[167439 rows x 4 columns]"
      ]
     },
     "execution_count": 540,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.sort_values(by=['endTime'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.2 Setting a timeframe\n",
    "For this investigation, we are only interested in investigating listening patterns from **2023**. Remove any data not from **2023** from the DataFrame."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 541,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>msPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10881</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10882</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>487.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10883</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>positions</td>\n",
       "      <td>417.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10884</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Peach Pit</td>\n",
       "      <td>Being so Normal</td>\n",
       "      <td>2205.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10885</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Kelly Clarkson</td>\n",
       "      <td>Santa, Can’t You Hear Me</td>\n",
       "      <td>278.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11967</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>Art Deco</td>\n",
       "      <td>38298.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13448.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23757.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9317.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17:00</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14661.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>156558 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  endTime      artistName                        trackName  \\\n",
       "10881 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10882 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10883 2023-01-01 01:17:00   Ariana Grande                        positions   \n",
       "10884 2023-01-01 01:17:00       Peach Pit                  Being so Normal   \n",
       "10885 2023-01-01 01:17:00  Kelly Clarkson         Santa, Can’t You Hear Me   \n",
       "...                   ...             ...                              ...   \n",
       "11967 2023-12-07 21:13:00    Lana Del Rey                         Art Deco   \n",
       "11968 2023-12-07 21:13:00   Ariana Grande  off the table (with The Weeknd)   \n",
       "11969 2023-12-07 21:14:00   Ariana Grande                          my hair   \n",
       "11970 2023-12-07 21:14:00   Leonard Cohen             Thanks for the Dance   \n",
       "11971 2023-12-07 21:17:00    The Vaccines   Your Love Is My Favourite Band   \n",
       "\n",
       "       msPlayed  \n",
       "10881     139.0  \n",
       "10882     487.0  \n",
       "10883     417.0  \n",
       "10884    2205.0  \n",
       "10885     278.0  \n",
       "...         ...  \n",
       "11967   38298.0  \n",
       "11968   13448.0  \n",
       "11969   23757.0  \n",
       "11970    9317.0  \n",
       "11971   14661.0  \n",
       "\n",
       "[156558 rows x 4 columns]"
      ]
     },
     "execution_count": 541,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "date_limit = pd.to_datetime('2023-01-01')\n",
    "df['endTime'] = pd.to_datetime(df['endTime'])\n",
    "mask = df['endTime'] < date_limit\n",
    "df = df[~mask]\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.3 Deleting rows\n",
    "Often in Data Science, you will encounter when a row entry has the value *NaN*, indicating missing data. These entries can skew your analysis, leading to inaccurate conclusions. For this task, identify and remove any rows in your DataFrame that contain NaN values. \\\n",
    "Later in the course, you might encounter other techniques of dealing with missing data, typically reffered to as *data imputation*. Here, though, you are just supposed to delete the entire rows with missing data."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 542,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>msPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10881</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>139.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10882</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>487.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10883</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>positions</td>\n",
       "      <td>417.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10884</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Peach Pit</td>\n",
       "      <td>Being so Normal</td>\n",
       "      <td>2205.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10885</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Kelly Clarkson</td>\n",
       "      <td>Santa, Can’t You Hear Me</td>\n",
       "      <td>278.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11967</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>Art Deco</td>\n",
       "      <td>38298.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13448.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23757.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9317.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17:00</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14661.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>156539 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  endTime      artistName                        trackName  \\\n",
       "10881 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10882 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10883 2023-01-01 01:17:00   Ariana Grande                        positions   \n",
       "10884 2023-01-01 01:17:00       Peach Pit                  Being so Normal   \n",
       "10885 2023-01-01 01:17:00  Kelly Clarkson         Santa, Can’t You Hear Me   \n",
       "...                   ...             ...                              ...   \n",
       "11967 2023-12-07 21:13:00    Lana Del Rey                         Art Deco   \n",
       "11968 2023-12-07 21:13:00   Ariana Grande  off the table (with The Weeknd)   \n",
       "11969 2023-12-07 21:14:00   Ariana Grande                          my hair   \n",
       "11970 2023-12-07 21:14:00   Leonard Cohen             Thanks for the Dance   \n",
       "11971 2023-12-07 21:17:00    The Vaccines   Your Love Is My Favourite Band   \n",
       "\n",
       "       msPlayed  \n",
       "10881     139.0  \n",
       "10882     487.0  \n",
       "10883     417.0  \n",
       "10884    2205.0  \n",
       "10885     278.0  \n",
       "...         ...  \n",
       "11967   38298.0  \n",
       "11968   13448.0  \n",
       "11969   23757.0  \n",
       "11970    9317.0  \n",
       "11971   14661.0  \n",
       "\n",
       "[156539 rows x 4 columns]"
      ]
     },
     "execution_count": 542,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.dropna()\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.4 Convert from milliseconds to seconds\n",
    "From `msPlayed`, create a new column `secPlayed` with the data converted from milliseconds to seconds. Then delete the column `msPlayed`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 543,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\kroel\\AppData\\Local\\Temp\\ipykernel_9020\\3655342099.py:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  df.loc[:, 'secPlayed'] = df['msPlayed'] / 1000\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>secPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10881</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.139</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10882</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.487</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10883</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>positions</td>\n",
       "      <td>0.417</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10884</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Peach Pit</td>\n",
       "      <td>Being so Normal</td>\n",
       "      <td>2.205</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10885</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Kelly Clarkson</td>\n",
       "      <td>Santa, Can’t You Hear Me</td>\n",
       "      <td>0.278</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11967</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>Art Deco</td>\n",
       "      <td>38.298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13.448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23.757</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9.317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17:00</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14.661</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>156539 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  endTime      artistName                        trackName  \\\n",
       "10881 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10882 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10883 2023-01-01 01:17:00   Ariana Grande                        positions   \n",
       "10884 2023-01-01 01:17:00       Peach Pit                  Being so Normal   \n",
       "10885 2023-01-01 01:17:00  Kelly Clarkson         Santa, Can’t You Hear Me   \n",
       "...                   ...             ...                              ...   \n",
       "11967 2023-12-07 21:13:00    Lana Del Rey                         Art Deco   \n",
       "11968 2023-12-07 21:13:00   Ariana Grande  off the table (with The Weeknd)   \n",
       "11969 2023-12-07 21:14:00   Ariana Grande                          my hair   \n",
       "11970 2023-12-07 21:14:00   Leonard Cohen             Thanks for the Dance   \n",
       "11971 2023-12-07 21:17:00    The Vaccines   Your Love Is My Favourite Band   \n",
       "\n",
       "       secPlayed  \n",
       "10881      0.139  \n",
       "10882      0.487  \n",
       "10883      0.417  \n",
       "10884      2.205  \n",
       "10885      0.278  \n",
       "...          ...  \n",
       "11967     38.298  \n",
       "11968     13.448  \n",
       "11969     23.757  \n",
       "11970      9.317  \n",
       "11971     14.661  \n",
       "\n",
       "[156539 rows x 4 columns]"
      ]
     },
     "execution_count": 543,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.loc[:, 'secPlayed'] = df['msPlayed'] / 1000\n",
    "df = df.drop(columns=['msPlayed'])\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.5 Finding top 10 favorite artists\n",
    "Find the top `ten` artists with the highest total play time (in seconds). Plot your findings in a bar graph. \\\n",
    "(hint: start by creating a new DataFrame with only `artistName` and your time column. To proceed, you will also likely need the `groupby` command from Pandas.)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 544,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>secPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>178996.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>390</th>\n",
       "      <td>Joji</td>\n",
       "      <td>137229.562</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>803</th>\n",
       "      <td>The Pretty Reckless</td>\n",
       "      <td>110293.430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>Cage The Elephant</td>\n",
       "      <td>95587.575</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>90543.113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>316</th>\n",
       "      <td>Greta Van Fleet</td>\n",
       "      <td>88026.405</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>795</th>\n",
       "      <td>The Neighbourhood</td>\n",
       "      <td>85673.375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>Gorillaz</td>\n",
       "      <td>84858.371</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>Led Zeppelin</td>\n",
       "      <td>77030.802</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Arctic Monkeys</td>\n",
       "      <td>76444.236</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              artistName   secPlayed\n",
       "50         Ariana Grande  178996.003\n",
       "390                 Joji  137229.562\n",
       "803  The Pretty Reckless  110293.430\n",
       "135    Cage The Elephant   95587.575\n",
       "443         Lana Del Rey   90543.113\n",
       "316      Greta Van Fleet   88026.405\n",
       "795    The Neighbourhood   85673.375\n",
       "308             Gorillaz   84858.371\n",
       "449         Led Zeppelin   77030.802\n",
       "47        Arctic Monkeys   76444.236"
      ]
     },
     "execution_count": 544,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "artist_df = df[['artistName', 'secPlayed']]\n",
    "artist_df = pd.DataFrame(artist_df.groupby('artistName')['secPlayed'].sum().reset_index())\n",
    "artist_df = artist_df.sort_values(by=['secPlayed'], ascending=False).head(10)\n",
    "artist_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Barplot:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 545,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = artist_df['artistName']\n",
    "y = artist_df['secPlayed']\n",
    "\n",
    "plt.figure(figsize=(20, 5))\n",
    "plt.bar(x, y, width=0.5, color='grey')\n",
    "plt.xlabel('Artist', fontweight='bold')\n",
    "plt.ylabel('Seconds Played', fontweight='bold')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2.6 Finding top 10 favorite songs\n",
    "Find the top `ten` songs with the highest play time. Create a graph visualizing the results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 546,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>trackName</th>\n",
       "      <th>secPlayed</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2122</th>\n",
       "      <td>Les</td>\n",
       "      <td>31403.364</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2671</th>\n",
       "      <td>O Children</td>\n",
       "      <td>24558.414</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4173</th>\n",
       "      <td>When the Levee Breaks - Remaster</td>\n",
       "      <td>22631.721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1566</th>\n",
       "      <td>Heartbeat</td>\n",
       "      <td>22056.629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149</th>\n",
       "      <td>Afterthought</td>\n",
       "      <td>21599.564</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>A Change Is Gonna Come</td>\n",
       "      <td>20414.317</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>487</th>\n",
       "      <td>Bones</td>\n",
       "      <td>18860.916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1161</th>\n",
       "      <td>FEEL.</td>\n",
       "      <td>18696.637</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>339</th>\n",
       "      <td>Bad Ones (feat. Tegan and Sara)</td>\n",
       "      <td>18558.247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2264</th>\n",
       "      <td>Love It If We Made It</td>\n",
       "      <td>17018.248</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             trackName  secPlayed\n",
       "2122                               Les  31403.364\n",
       "2671                        O Children  24558.414\n",
       "4173  When the Levee Breaks - Remaster  22631.721\n",
       "1566                         Heartbeat  22056.629\n",
       "149                       Afterthought  21599.564\n",
       "81              A Change Is Gonna Come  20414.317\n",
       "487                              Bones  18860.916\n",
       "1161                             FEEL.  18696.637\n",
       "339    Bad Ones (feat. Tegan and Sara)  18558.247\n",
       "2264             Love It If We Made It  17018.248"
      ]
     },
     "execution_count": 546,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "song_df = df[['trackName', 'secPlayed']]\n",
    "song_df = pd.DataFrame(song_df.groupby('trackName')['secPlayed'].sum().reset_index())\n",
    "song_df = song_df.sort_values(by=['secPlayed'], ascending=False).head(10)\n",
    "song_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 547,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2600x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "x = song_df['trackName']\n",
    "y = song_df['secPlayed']\n",
    "\n",
    "plt.figure(figsize=(26, 5))\n",
    "plt.bar(x, y, width=0.5, color='grey')\n",
    "plt.xlabel('Track', fontweight='bold')\n",
    "plt.ylabel('Seconds Played', fontweight='bold')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 3: Further analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.0 Average listening time by hour\n",
    "Generate a plot that displays the average amount of time that music is played for each hour of the day."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 548,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "340"
      ]
     },
     "execution_count": 548,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "no_of_days_listened = df['endTime'].dt.floor('D').nunique()\n",
    "no_of_days_listened"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 549,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "24"
      ]
     },
     "execution_count": 549,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['endTime'].dt.hour.nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 550,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "average_hour_df = pd.DataFrame(df.groupby(df['endTime'].dt.hour.apply(lambda x: f'{x:02d}'))['secPlayed'].sum().reset_index())\n",
    "average_hour_df['secPlayed'] = average_hour_df['secPlayed'] / no_of_days_listened\n",
    "average_hour_df.rename(columns={'endTime': 'Hour'}, inplace=True)\n",
    "average_hour_df\n",
    "\n",
    "plt.figure(figsize=(20, 6))\n",
    "plt.plot(average_hour_df['Hour'], average_hour_df['secPlayed'], marker='o', color='g')\n",
    "plt.title('Average playing seconds per hour of day')\n",
    "plt.xlabel('Hour of day')\n",
    "plt.ylabel('Average seconds played')\n",
    "plt.xticks(average_hour_df['Hour'])\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.1 Morning music and evening music\n",
    "I think many people find that some types of music are more suitable for morning listening and some music is more suitable for evening listening. Create a plot that compares the play time of the artists *Leonard Cohen* and *Rage Against the Machine* on an hour-by-hour basis. See if there are any differences."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 551,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 2000x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "cohen_data = df[df['artistName'] == 'Leonard Cohen']\n",
    "ratm_data = df[df['artistName'] == 'Rage Against The Machine']\n",
    "\n",
    "cohen_hourly = cohen_data.groupby(cohen_data['endTime'].dt.hour)['secPlayed'].sum().reset_index()\n",
    "cohen_hourly['endTime'] = cohen_hourly['endTime'].apply(lambda x: f'{x:02d}')\n",
    "ratm_hourly = ratm_data.groupby(ratm_data['endTime'].dt.hour)['secPlayed'].sum().reset_index()\n",
    "ratm_hourly['endTime'] = ratm_hourly['endTime'].apply(lambda x: f'{x:02d}')\n",
    "\n",
    "plt.figure(figsize=(20, 10))\n",
    "plt.bar(cohen_hourly['endTime'], cohen_hourly['secPlayed'], width=0.4, color='dodgerblue', edgecolor='black', label='Leonard Cohen')\n",
    "plt.bar(ratm_hourly['endTime'], ratm_hourly['secPlayed'], width=0.3, color='orange', edgecolor='black', label='Rage Against The Machine')\n",
    "plt.title('Total listening time of Leonard Cohen and Rage Against The Machine for 2023 distributed by hour of day')\n",
    "plt.xlabel('Hour of day', size=14)\n",
    "plt.ylabel('Total seconds played', size=14)\n",
    "plt.legend()\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.2 Analysing skipped songs\n",
    "Determining whether a song was skipped or listened to can be challenging. For this analysis, we'll simplify by defining a skipped song as any track played for less than 30 seconds. Conversely, a song played for 30 seconds or more is considered listened to. \\\n",
    " Add a column to your DataFrame to reflect this criteria: set the value to 1 if the song was played for less than 30 seconds (indicating a skipped song), and 0 if it was played for 30 seconds or longer."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 552,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>secPlayed</th>\n",
       "      <th>skipped</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10881</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.139</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10882</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.487</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10883</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>positions</td>\n",
       "      <td>0.417</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10884</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Peach Pit</td>\n",
       "      <td>Being so Normal</td>\n",
       "      <td>2.205</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10885</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Kelly Clarkson</td>\n",
       "      <td>Santa, Can’t You Hear Me</td>\n",
       "      <td>0.278</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11967</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>Art Deco</td>\n",
       "      <td>38.298</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13.448</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23.757</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11970</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Leonard Cohen</td>\n",
       "      <td>Thanks for the Dance</td>\n",
       "      <td>9.317</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11971</th>\n",
       "      <td>2023-12-07 21:17:00</td>\n",
       "      <td>The Vaccines</td>\n",
       "      <td>Your Love Is My Favourite Band</td>\n",
       "      <td>14.661</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>156539 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  endTime      artistName                        trackName  \\\n",
       "10881 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10882 2023-01-01 01:17:00   Ariana Grande                          7 rings   \n",
       "10883 2023-01-01 01:17:00   Ariana Grande                        positions   \n",
       "10884 2023-01-01 01:17:00       Peach Pit                  Being so Normal   \n",
       "10885 2023-01-01 01:17:00  Kelly Clarkson         Santa, Can’t You Hear Me   \n",
       "...                   ...             ...                              ...   \n",
       "11967 2023-12-07 21:13:00    Lana Del Rey                         Art Deco   \n",
       "11968 2023-12-07 21:13:00   Ariana Grande  off the table (with The Weeknd)   \n",
       "11969 2023-12-07 21:14:00   Ariana Grande                          my hair   \n",
       "11970 2023-12-07 21:14:00   Leonard Cohen             Thanks for the Dance   \n",
       "11971 2023-12-07 21:17:00    The Vaccines   Your Love Is My Favourite Band   \n",
       "\n",
       "       secPlayed  skipped  \n",
       "10881      0.139        1  \n",
       "10882      0.487        1  \n",
       "10883      0.417        1  \n",
       "10884      2.205        1  \n",
       "10885      0.278        1  \n",
       "...          ...      ...  \n",
       "11967     38.298        0  \n",
       "11968     13.448        1  \n",
       "11969     23.757        1  \n",
       "11970      9.317        1  \n",
       "11971     14.661        1  \n",
       "\n",
       "[156539 rows x 5 columns]"
      ]
     },
     "execution_count": 552,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['skipped'] = (df['secPlayed'] < 30).astype(int)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.3 Plotting skipped songs\n",
    "Create a pie-chart that compares amount of skipped songs to amount of non-skipped songs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 588,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1500x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "skipped_count = df['skipped'].sum()\n",
    "listened_count = len(df) - skipped_count\n",
    "\n",
    "labels = ['Skipped', 'Listened']\n",
    "colors = ['lightcoral', 'mediumseagreen']\n",
    "sizes = [skipped_count, listened_count]\n",
    "\n",
    "plt.figure(figsize=(15, 5))\n",
    "plt.pie(sizes, labels=labels, colors=colors, startangle=90, autopct=f'%1.0f%%')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.4 Artists by percentage of songs skipped\n",
    "For each artist in the dataset, calculate which percentage of their songs was skipped. Store this information in a new DataFrame called `df_skipped`. Store the percentage of skipped songs in a new column named `SkipRate`\\\n",
    "\\\n",
    "**Example**: If an artist has **100** songs in your dataset and **25** of these were skipped, the percentage of skipped songs for this artist would be $\\frac{25}{100}=25\\%$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 554,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>skipped</th>\n",
       "      <th>skipRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>10cc</td>\n",
       "      <td>28</td>\n",
       "      <td>19</td>\n",
       "      <td>67.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2Pac</td>\n",
       "      <td>513</td>\n",
       "      <td>442</td>\n",
       "      <td>86.159844</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3 Doors Down</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4 Non Blondes</td>\n",
       "      <td>122</td>\n",
       "      <td>88</td>\n",
       "      <td>72.131148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>50 Cent</td>\n",
       "      <td>28</td>\n",
       "      <td>19</td>\n",
       "      <td>67.857143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>951</th>\n",
       "      <td>squeeda</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>66.666667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>952</th>\n",
       "      <td>tenkousei.</td>\n",
       "      <td>37</td>\n",
       "      <td>37</td>\n",
       "      <td>100.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>953</th>\n",
       "      <td>trxxshed</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>50.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>954</th>\n",
       "      <td>xander.</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>37.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>955</th>\n",
       "      <td>Édith Piaf</td>\n",
       "      <td>155</td>\n",
       "      <td>146</td>\n",
       "      <td>94.193548</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>956 rows × 4 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        artistName  trackName  skipped    skipRate\n",
       "0             10cc         28       19   67.857143\n",
       "1             2Pac        513      442   86.159844\n",
       "2     3 Doors Down          2        1   50.000000\n",
       "3    4 Non Blondes        122       88   72.131148\n",
       "4          50 Cent         28       19   67.857143\n",
       "..             ...        ...      ...         ...\n",
       "951        squeeda          3        2   66.666667\n",
       "952     tenkousei.         37       37  100.000000\n",
       "953       trxxshed          2        1   50.000000\n",
       "954        xander.          8        3   37.500000\n",
       "955     Édith Piaf        155      146   94.193548\n",
       "\n",
       "[956 rows x 4 columns]"
      ]
     },
     "execution_count": 554,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_songs_per_artist = df.groupby('artistName')['trackName'].count().reset_index()\n",
    "df_skipped_per_artist = df.groupby('artistName')['skipped'].sum().reset_index()\n",
    "df_skipped = pd.merge(df_songs_per_artist, df_skipped_per_artist, on='artistName')\n",
    "df_skipped['skipRate'] = df_skipped['skipped'] / df_skipped['trackName'] * 100\n",
    "df_skipped"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 587,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>skipped</th>\n",
       "      <th>skipRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>19337</td>\n",
       "      <td>19246</td>\n",
       "      <td>99.529400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>135</th>\n",
       "      <td>Cage The Elephant</td>\n",
       "      <td>4627</td>\n",
       "      <td>4082</td>\n",
       "      <td>88.221310</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>390</th>\n",
       "      <td>Joji</td>\n",
       "      <td>3611</td>\n",
       "      <td>2694</td>\n",
       "      <td>74.605372</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>803</th>\n",
       "      <td>The Pretty Reckless</td>\n",
       "      <td>3278</td>\n",
       "      <td>2570</td>\n",
       "      <td>78.401464</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>Lana Del Rey</td>\n",
       "      <td>3028</td>\n",
       "      <td>2480</td>\n",
       "      <td>81.902246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>795</th>\n",
       "      <td>The Neighbourhood</td>\n",
       "      <td>3011</td>\n",
       "      <td>2472</td>\n",
       "      <td>82.098970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>449</th>\n",
       "      <td>Led Zeppelin</td>\n",
       "      <td>2966</td>\n",
       "      <td>2527</td>\n",
       "      <td>85.198921</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Arctic Monkeys</td>\n",
       "      <td>2623</td>\n",
       "      <td>2147</td>\n",
       "      <td>81.852840</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>308</th>\n",
       "      <td>Gorillaz</td>\n",
       "      <td>2535</td>\n",
       "      <td>1973</td>\n",
       "      <td>77.830375</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>316</th>\n",
       "      <td>Greta Van Fleet</td>\n",
       "      <td>2255</td>\n",
       "      <td>1700</td>\n",
       "      <td>75.388027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>132</th>\n",
       "      <td>BØRNS</td>\n",
       "      <td>2239</td>\n",
       "      <td>1909</td>\n",
       "      <td>85.261277</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>211</th>\n",
       "      <td>Des Rocs</td>\n",
       "      <td>1960</td>\n",
       "      <td>1816</td>\n",
       "      <td>92.653061</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>157</th>\n",
       "      <td>Childish Gambino</td>\n",
       "      <td>1732</td>\n",
       "      <td>1431</td>\n",
       "      <td>82.621247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>932</th>\n",
       "      <td>grandson</td>\n",
       "      <td>1536</td>\n",
       "      <td>1437</td>\n",
       "      <td>93.554688</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>473</th>\n",
       "      <td>Lorde</td>\n",
       "      <td>1531</td>\n",
       "      <td>1411</td>\n",
       "      <td>92.161986</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              artistName  trackName  skipped   skipRate\n",
       "50         Ariana Grande      19337    19246  99.529400\n",
       "135    Cage The Elephant       4627     4082  88.221310\n",
       "390                 Joji       3611     2694  74.605372\n",
       "803  The Pretty Reckless       3278     2570  78.401464\n",
       "443         Lana Del Rey       3028     2480  81.902246\n",
       "795    The Neighbourhood       3011     2472  82.098970\n",
       "449         Led Zeppelin       2966     2527  85.198921\n",
       "47        Arctic Monkeys       2623     2147  81.852840\n",
       "308             Gorillaz       2535     1973  77.830375\n",
       "316      Greta Van Fleet       2255     1700  75.388027\n",
       "132                BØRNS       2239     1909  85.261277\n",
       "211             Des Rocs       1960     1816  92.653061\n",
       "157     Childish Gambino       1732     1431  82.621247\n",
       "932             grandson       1536     1437  93.554688\n",
       "473                Lorde       1531     1411  92.161986"
      ]
     },
     "execution_count": 587,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_skipped.sort_values(by='trackName', ascending=False).head(15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 3.5 Comparing artists by skip-rate \n",
    "Find the `three` top artists with the lowest skip-rate and the `three` with the highest. Print their names, along with their skip-rate."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 555,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>skipped</th>\n",
       "      <th>skipRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>328</th>\n",
       "      <td>Hannah Montana</td>\n",
       "      <td>54</td>\n",
       "      <td>54</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Alexander Stewart</td>\n",
       "      <td>47</td>\n",
       "      <td>47</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>560</th>\n",
       "      <td>No Vacation</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            artistName  trackName  skipped  skipRate\n",
       "328     Hannah Montana         54       54     100.0\n",
       "28   Alexander Stewart         47       47     100.0\n",
       "560        No Vacation          2        2     100.0"
      ]
     },
     "execution_count": 555,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_skipped.sort_values(by='skipRate', ascending=False).head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 556,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>skipped</th>\n",
       "      <th>skipRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>290</th>\n",
       "      <td>G Mills</td>\n",
       "      <td>36</td>\n",
       "      <td>36</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>628</th>\n",
       "      <td>Ramón</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>417</th>\n",
       "      <td>Kelly Clarkson</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>100.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         artistName  trackName  skipped  skipRate\n",
       "290         G Mills         36       36     100.0\n",
       "628           Ramón         10       10     100.0\n",
       "417  Kelly Clarkson          3        3     100.0"
      ]
     },
     "execution_count": 556,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_skipped.sort_values(by='skipRate').tail(3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 4: God Is a Data Scientist - The Ariana Deep-Dive"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4.0 Ariana-DataFrame: \n",
    "Create a new DataFrame called *df_ariana*, containing only rows with music by Ariana Grande."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 557,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>endTime</th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>secPlayed</th>\n",
       "      <th>skipped</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>10881</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.139</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10882</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>7 rings</td>\n",
       "      <td>0.487</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10883</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>positions</td>\n",
       "      <td>0.417</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10887</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Santa Baby</td>\n",
       "      <td>12.293</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10888</th>\n",
       "      <td>2023-01-01 01:17:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Right There (feat. Big Sean)</td>\n",
       "      <td>22.929</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11948</th>\n",
       "      <td>2023-12-07 17:46:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>Almost Is Never Enough</td>\n",
       "      <td>28.483</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11955</th>\n",
       "      <td>2023-12-07 20:51:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>needy</td>\n",
       "      <td>26.220</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11961</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>pete davidson</td>\n",
       "      <td>0.603</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11968</th>\n",
       "      <td>2023-12-07 21:13:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>off the table (with The Weeknd)</td>\n",
       "      <td>13.448</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11969</th>\n",
       "      <td>2023-12-07 21:14:00</td>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>my hair</td>\n",
       "      <td>23.757</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>19337 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  endTime     artistName                        trackName  \\\n",
       "10881 2023-01-01 01:17:00  Ariana Grande                          7 rings   \n",
       "10882 2023-01-01 01:17:00  Ariana Grande                          7 rings   \n",
       "10883 2023-01-01 01:17:00  Ariana Grande                        positions   \n",
       "10887 2023-01-01 01:17:00  Ariana Grande                       Santa Baby   \n",
       "10888 2023-01-01 01:17:00  Ariana Grande     Right There (feat. Big Sean)   \n",
       "...                   ...            ...                              ...   \n",
       "11948 2023-12-07 17:46:00  Ariana Grande           Almost Is Never Enough   \n",
       "11955 2023-12-07 20:51:00  Ariana Grande                            needy   \n",
       "11961 2023-12-07 21:13:00  Ariana Grande                    pete davidson   \n",
       "11968 2023-12-07 21:13:00  Ariana Grande  off the table (with The Weeknd)   \n",
       "11969 2023-12-07 21:14:00  Ariana Grande                          my hair   \n",
       "\n",
       "       secPlayed  skipped  \n",
       "10881      0.139        1  \n",
       "10882      0.487        1  \n",
       "10883      0.417        1  \n",
       "10887     12.293        1  \n",
       "10888     22.929        1  \n",
       "...          ...      ...  \n",
       "11948     28.483        1  \n",
       "11955     26.220        1  \n",
       "11961      0.603        1  \n",
       "11968     13.448        1  \n",
       "11969     23.757        1  \n",
       "\n",
       "[19337 rows x 5 columns]"
      ]
     },
     "execution_count": 557,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_ariana = df[df['artistName'] == 'Ariana Grande']\n",
    "df_ariana"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 4.1 Average skip rate\n",
    "Create a histogram of the distribution of the skip-rate values of the different artists in your DataFrame  `df_skipped`, with skip rates on one axis and number of artists on the other. \\\n",
    "\\\n",
    "Then, retrieve the skip rate for Ariana Grande from your DataFrame `df_skipped`. Run the code in the cell below. Where on this distribution does Ariana Grande fall? Do I skip her songs more than average, or less?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 585,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ariana_skip_rate = df_skipped[df_skipped['artistName'] == 'Ariana Grande']\n",
    "mean_skip_rate = df_skipped['skipRate'].mean()\n",
    "\n",
    "plt.figure(figsize=(10, 5))\n",
    "plt.hist(df_skipped['skipRate'], bins=50, edgecolor='black', color='dodgerblue')\n",
    "plt.axvline(mean_skip_rate, color='gold', linestyle='dashed')\n",
    "plt.axvline(ariana_skip_rate.loc[50, 'skipRate'], color='tomato', linestyle='dotted')\n",
    "plt.xlim(100, 0)\n",
    "plt.title('Artists and skip rate')\n",
    "plt.xlabel('Skip Rate (%)', size=10)\n",
    "plt.ylabel('Number of artists', size=10)\n",
    "plt.legend(['Average skip rate', 'Ariana Grandes skip rate'])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 569,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>artistName</th>\n",
       "      <th>trackName</th>\n",
       "      <th>skipped</th>\n",
       "      <th>skipRate</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Ariana Grande</td>\n",
       "      <td>19337</td>\n",
       "      <td>19246</td>\n",
       "      <td>99.5294</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       artistName  trackName  skipped  skipRate\n",
       "50  Ariana Grande      19337    19246   99.5294"
      ]
     },
     "execution_count": 569,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ariana_skip_rate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 570,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "73.04822293282288"
      ]
     },
     "execution_count": 570,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mean_skip_rate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Part 4: Questions\n",
    "Q1: Did I skip a lot of Ariana Grande's songs, or did I not, compared to the rest of the dataset?\n",
    "\n",
    "A1: Not only did you skip a lot of her songs; as shown in block 587, Ariana Grande was by far the artist you clicked play on the most times - only that you skipped 99.9% of these songs too. As the top 15 of the df_skipped dataframe sorted by 'trackName' shows, you clicked play on 19337 Ariana songs and skipped 19246 of them. Number 2 in the df_skipped dataframe is Cage the Elephant, by whom you played only 4627 songs and skipped 4082\n",
    "\n",
    "Q2: What might be some possible reasons for Ariana Grande to be my nr.1 artist?\n",
    "\n",
    "A2: As listed above, you clicked on Arianas songs 14710 more times than 2nd place on your list over most played artists. Probably there's som kind of formula / algorithm calculating top artists that considers the ratio skipped/played/total amount of songs in a way that favours the total amount of plays before skip rate when the numbers are as high as with Ariana here."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
